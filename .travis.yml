language: node_js
node_js:
  - "0.8"
  - "0.10"
  - "0.12"
  - "4.9"
  - "5.12"
  - "6.17"
  - "7.10"
  - "8.16"
  - "9.11"
  - "10.15"
sudo: false
cache:
  directories:
    - node_modules
before_install:
  # Configure npm
  - |
    # Skip updating shrinkwrap / lock
    npm config set shrinkwrap false
  # Remove all non-test dependencies
  - |
    # Remove build dependencies
    npm rm --save-dev csv-parse
    npm rm --save-dev raw-body
    npm rm --save-dev stream-to-array
  # Setup Node.js version-specific dependencies
  - |
    # eslint for linting
    # - remove on Node.js < 6
    if [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 6 ]]; then
      node -pe 'Object.keys(require("./package").devDependencies).join("\n")' | \
        grep -E '^eslint(-|$)' | \
        xargs npm rm --save-dev
    fi
  - |
    # istanbul for coverage
    # - remove on Node.js < 0.10
    if [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -eq 0 && "$(cut -d. -f2 <<< "$TRAVIS_NODE_VERSION")" -lt 10 ]]; then
      npm rm --save-dev istanbul
    fi
  - |
    # mocha for testing
    # - use 2.x for Node.js < 0.10
    # - use 3.x for Node.js < 4
    # - use 5.x for Node.js < 6
    if [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -eq 0 && "$(cut -d. -f2 <<< "$TRAVIS_NODE_VERSION")" -lt 10 ]]; then
      npm install --save-dev mocha@2.5.3
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 4 ]]; then
      npm install --save-dev mocha@3.5.3
    elif [[ "$(cut -d. -f1 <<< "$TRAVIS_NODE_VERSION")" -lt 6 ]]; then
      npm install --save-dev mocha@5.2.0
    fi
  # Update Node.js modules
  - |
    # Prune & rebuild node_modules
    if [[ -d node_modules ]]; then
      npm prune
      npm rebuild
    fi

script:
  - |
    # Run test script, depending on istanbul install
    if [[ -n "$(npm -ps ls istanbul)" ]]; then
      npm run-script test-ci
    else
      npm test
    fi
  - |
    # Run linting, depending on eslint install
    if [[ -n "$(npm -ps ls eslint)" ]]; then
      npm run-script lint
    fi
after_script:
  - |
    # Upload coverage to coveralls, if exists
    if [[ -f ./coverage/lcov.info ]]; then
      npm install --save-dev coveralls@2
      coveralls < ./coverage/lcov.info
    fi
